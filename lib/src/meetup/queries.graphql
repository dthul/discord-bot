fragment EventData on Event {
  id
  title
  eventUrl
  shortUrl
  description
  hosts {
    id
  }
  howToFindUs
  dateTime
  maxTickets
  going
  isOnline
  rsvpSettings {
    rsvpsClosed
  }
  venue {
    id
    lat
    lng
  }
  group {
    urlname
  }
  numberOfAllowedGuests
  image {
    id
  }
}

query UpcomingEventsQuery($urlname: String!, $first: Int!, $after: String) {
  groupByUrlname(urlname: $urlname) {
    upcomingEvents(input: {first: $first, after: $after}) {
      pageInfo {
        hasNextPage
        endCursor
      }
      count
      edges {
        node {
          ...EventData
        }
      }
    }
  }
}

query EventTicketsQuery($id: ID!, $first: Int!, $after: String) {
  event(id: $id) {
    tickets(input: {first: $first, after: $after}) {
      pageInfo {
        hasNextPage
        endCursor
      }
      count
      edges {
        node {
          user {
            id
          }
        }
      }
    }
  }
}

query SelfQuery {
  self {
    id
    name
    memberPhoto {
      id
      baseUrl
    }
  }
}

query EventQuery($id: ID!) {
  event(id: $id) {
    ...EventData
  }
}

query GroupMembershipQuery($urlname: String!) {
  groupByUrlname(urlname: $urlname) {
    isMember
    isOrganizer
    membershipMetadata {
      status
      role
    }
  }
}

mutation CreateEventMutation($input: CreateEventInput!) {
  createEvent(input: $input) {
    event {
      ...EventData
    }
    errors {
      code
      message
      field
    }
  }
}

mutation CloseEventRsvpsMutation($input: CloseEventRsvpsInput!) {
  closeEventRsvps(input: $input) {
    event {
      id
    }
    errors {
      code
      message
      field
    }
  }
}